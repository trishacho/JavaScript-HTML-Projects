{"version":3,"sources":["index.js","Example.js"],"names":["ReactDOM","render","posts","useState","setPosts","useEffect","fetch","then","response","json","output","data","console","log","usePosts","style","backgroundImage","backgroundRepeat","backgroundSize","title","fontFamily","fontSize","textDecorationLine","length","map","item","display","backgroundColor","padding","firstName","lastName","src","profile","alt","width","height","fontWeight","description","document","getElementById"],"mappings":"8MAKAA,IAASC,OAAO,mBCoBD,WACb,IAAMC,EAtBR,WAAoB,MACQC,mBAAS,IADjB,mBACXD,EADW,KACJE,EADI,KAkBlB,OAXAC,qBAAU,WAENC,MAAM,0DACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACAN,EAASM,EAAOC,MAChBC,QAAQC,WAGhB,IAEKX,EAIOY,GAEd,OACE,yBAAKC,MAAO,CAACC,gBAAiB,4PACjBC,iBAAkB,YAAaC,eAAgB,YAD5D,IAEA,wBAAIC,MAAM,2BAA2BJ,MAAO,CAACK,WAAY,QAASC,SAAU,OAAQC,mBAAoB,cAAxG,wBAFA,IAICpB,EAAMqB,OAAS,EACZrB,EAAMsB,KAAI,SAAAC,GAAI,OACZ,wBAAIV,MAAO,CAACW,QAAQ,WAApB,IACE,wBAAIX,MAAO,CAACY,gBAAiB,aAAcC,QAAS,OAAQP,SAAU,OAAQD,WAAY,UAAWK,EAAKI,UAA1G,IAAsHJ,EAAKK,UAD7H,IAEE,yBAAKC,IAAON,EAAKO,QAASC,IAAM,aAAaC,MAAQ,MAAMC,OAAS,QAFtE,IAGE,wBAAIpB,MAAO,CAACM,SAAU,OAAQe,WAAY,SAAUhB,WAAY,UAAWK,EAAKY,aAHlF,QAOE,qEDrCI,MAAaC,SAASC,eAAe,W","file":"static/js/main.cfd09d1e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Example from './Example';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Example />, document.getElementById('root'));\n\n// renders a react element into document object model in the container and returns a reference to Example.\n// npm start - starts a development server I can communicated with\n// npm run build\n\n// also using Node.js to execute the JavaScript code outside the browser itself...\n// helps because it runs automatically and it's easy to run and output everything on a web browser.\n// for static and server-rendered applications\n// includes styling and routing solutions out of the box\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React, { useEffect, useState } from \"react\" // effect and state hook\n// need to run additional code after DOM is updated\n// need to perform effects after DOM is updated\n\nfunction usePosts() { // declaring a function \"usePosts\"\n  const [posts, setPosts] = useState([])  // declaring a new state variable called \"posts\" and setting it to empty array\n  // state variable - React remembers its value between re-renders and provides the most recent one to the function\n  // useState hook adds React state to !!function!! components\n  // useState declares a \"state variable\"\n  // useState returns the current state and the function that updates it\n\n  useEffect(() => { // useEffect tells React to do this after every render\n      // Using the Fetch API - a JavaScript interface for accessing and manipulating parts of the HTTP pipeline\n      fetch(\"https://api.hackillinois.org/upload/blobstore/mentors/\") // fetching our resource - returns a \"Response\" object\n      .then(response => response.json()) // extracting the JSON body content from the Response object\n      .then(output => { // getting the output\n            setPosts(output.data) // setting \"posts\" array to the data it gets\n            console.log() // outputting the data we just got to the web console\n      })\n  }\n  , []) // done with useEffect!\n\n  return posts // returning posts array in the function usePosts()\n}\n\nexport default function Example() { // exporting single value of data\n  const posts = usePosts() // saving output retrieved from function usePosts() in const posts\n\n  return ( // return statement for function\n    <div style={{backgroundImage: 'url(\"https://camo.githubusercontent.com/e23238aae4cb8c485e6949cea444757d0eb84489018c4e4d487d18b2bb7ab294/68747470733a2f2f7765626772616469656e74732e636f6d2f7075626c69632f7765626772616469656e74735f706e672f313538253230416e67656c253230436172652e706e67\")',\n                 backgroundRepeat: 'no-repeat', backgroundSize: '10000px'}}> {/* styling webpage with a background! */}\n    <h1 title=\"HackIllinois Mentor List\" style={{fontFamily: 'arial', fontSize: '40px', textDecorationLine: 'underline'}}>HackIllinois Mentors</h1> {/* styling title with font, size, underlining */}\n    {/* checking to make sure posts is not 0 and mapping everything in posts to give all these styling choices */}\n    {posts.length > 0 ? (\n        posts.map(item => (\n          <ul style={{display:'inline'}}> {/* un-bulleted list displaying inline */}\n            <h2 style={{backgroundColor: \"powderblue\", padding: '10px', fontSize: '30px', fontFamily: 'arial'}}>{item.firstName} {item.lastName}</h2> {/* first name and last name styling! */}\n            <img src = {item.profile} alt = \"The mentor\" width = \"15%\" height = \"15%\"/> {/* making sure the pictures are the same size but still keep their ratio + adding accessibility for pictures */}\n            <h2 style={{fontSize: '18px', fontWeight: 'normal', fontFamily: 'arial'}}>{item.description}</h2> {/* styling the information blurbs */}\n          </ul>\n        ))\n    ) : (\n            <h1>HackIllinois mentors are loading!</h1>\n        )\n    }\n    </div>\n  )\n}"],"sourceRoot":""}